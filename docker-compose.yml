version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: delivery-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"  # Porta 5433 para não conflitar com seu pgAdmin local
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - delivery-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: delivery-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - delivery-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Drivers API
  delivery-drivers-api:
    image: waynerramos/delivery-drivers-api
    container_name: delivery-drivers-api
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      # Configurações do Banco de Dados
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      # Configurações do RabbitMQ
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_HOST=rabbitmq
      - RABBITMQ_DEFAULT_PORT=5672
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      # Configurações da Aplicação
      - APP_PORT=${APP_PORT}
      - APP_ENV=${APP_ENV}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    networks:
      - delivery-network
    restart: unless-stopped

  # Simulator
  delivery-simulator:
    image: waynerramos/delivery-simulator
    container_name: delivery-simulator
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      # Configurações do RabbitMQ
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_HOST=rabbitmq
      - RABBITMQ_DEFAULT_PORT=5672
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      # Configurações das Filas
      - RABBITMQ_CONSUMER_QUEUE=${RABBITMQ_CONSUMER_QUEUE}
      - RABBITMQ_DESTINATION=${RABBITMQ_DESTINATION}
      - RABBITMQ_DESTINATION_ROUTING_KEY=${RABBITMQ_DESTINATION_ROUTING_KEY}
    ports:
      - "8082:8082"
    networks:
      - delivery-network
    restart: unless-stopped

  # Frontend
  delivery-frontend:
    image: waynerramos/delivery-frontend
    container_name: delivery-frontend
    depends_on:
      - delivery-drivers-api
    environment:
      - REACT_APP_GOOGLE_MAPS_API_KEY=${REACT_APP_GOOGLE_MAPS_API_KEY}
      - REACT_APP_API_URL=http://localhost:${APP_PORT}
    ports:
      - "3000:80"
    networks:
      - delivery-network
    restart: unless-stopped

networks:
  delivery-network:
    driver: bridge

volumes:
  postgres_data:
    name: delivery_postgres_data
  rabbitmq_data:
    name: delivery_rabbitmq_data